% Define facts for the database
% student(StudentName, TeacherName, Subject, SubjectCode).
student('Alice', 'Mr. Smith', 'Math', 'MATH101').
student('Bob', 'Mrs. Johnson', 'English', 'ENG201').
student('Carol', 'Mr. Brown', 'History', 'HIST301').
student('David', 'Ms. Davis', 'Science', 'SCI401').

% Define a rule to find a student's teacher
find_teacher(Student, Teacher) :-
    student(Student, Teacher, _, _).

% Define a rule to find the subject and subject code for a student
find_subject_and_code(Student, Subject, Code) :-
    student(Student, _, Subject, Code).

% Define a rule to find all students of a specific teacher
students_of_teacher(Teacher, Student) :-
    student(Student, Teacher, _, _).

% Define a rule to find all students taking a specific subject
students_of_subject(Subject, Student) :-
    student(Student, _, Subject, _).

% Define a rule to find the subject code for a specific subject
find_subject_code(Subject, Code) :-
    student(_, _, Subject, Code).

% Define a rule to add a new student to the database
add_student(Student, Teacher, Subject, Code) :-
    assertz(student(Student, Teacher, Subject, Code)).

% Define a rule to remove a student from the database
remove_student(Student) :-
    retract(student(Student, _, _, _)).
